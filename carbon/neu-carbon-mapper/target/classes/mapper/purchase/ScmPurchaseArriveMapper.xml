<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neu.carbon.scm.mapper.ScmPurchaseArriveMapper">
    
    <resultMap type="ScmPurchaseArrive" id="ScmPurchaseArriveResult">
        <result property="id"    column="id"    />
        <result property="arriveNo"    column="arrive_no"    />
        <result property="contractId"    column="contract_id"    />
        <result property="contractNo"    column="contract_no"    />
        <result property="supplierId"    column="supplier_id"    />
        <result property="arriveDate"    column="arrive_date"    />
        <result property="status"    column="status"    />
        <result property="remark"    column="remark"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="contact"    column="contact"    />
        <result property="contactTel"    column="contact_tel"    />
        <result property="supplierName"    column="supplier_name"    />

    </resultMap>

    <resultMap id="ScmPurchaseArriveScmPurchaseArriveDetailResult" type="ScmPurchaseArrive" extends="ScmPurchaseArriveResult">
        <collection property="scmPurchaseArriveDetailList" notNullColumn="id" javaType="java.util.List" resultMap="ScmPurchaseArriveDetailResult" />
    </resultMap>

    <resultMap type="ScmPurchaseArriveDetail" id="ScmPurchaseArriveDetailResult">
        <result property="id"    column="id"    />
        <result property="arriveId"    column="arrive_id"    />
        <result property="materialId"    column="material_id"    />
        <result property="batchNo"    column="batch_no"    />
        <result property="price"    column="price"    />
        <result property="bookQuantity"    column="book_quantity"    />
        <result property="arriveQuantity"    column="arrive_quantity"    />
        <result property="returnQuantity"    column="return_quantity"    />
        <result property="detailRemark"    column="detail_remark"    />
    </resultMap>

    <sql id="selectScmPurchaseArriveVo">
        select a.id, a.arrive_no, a.contract_id, a.contract_no, a.supplier_id, a.arrive_date, a.status, a.remark, a.create_by, a.create_time, s.name supplier_name, s.contact, s.contact_tel
        from scm_purchase_arrive a left join scm_purchase_supplier s on a.supplier_id = s.id
    </sql>

    <select id="selectScmPurchaseArriveList" parameterType="ScmPurchaseArrive" resultMap="ScmPurchaseArriveResult">
        <include refid="selectScmPurchaseArriveVo"/>
        <where>  
            <if test="arriveNo != null  and arriveNo != ''"> and a.arrive_no like concat('%', #{arriveNo}, '%')</if>
            <if test="contractNo != null  and contractNo != ''"> and a.contract_no like concat('%', #{contractNo}, '%')</if>
            <if test="supplierId != null "> and a.supplier_id = #{supplierId}</if>
            <if test="params.beginArriveDate != null and params.beginArriveDate != '' and params.endArriveDate != null and params.endArriveDate != ''"> and a.arrive_date between #{params.beginArriveDate} and #{params.endArriveDate}</if>
            <if test="status != null  and status != ''"> and a.status = #{status}</if>
            <if test="params.beginCreateTime != null and params.beginCreateTime != '' and params.endCreateTime != null and params.endCreateTime != ''"> and a.create_time between #{params.beginCreateTime} and #{params.endCreateTime}</if>
            <if test="supplierName != null  and supplierName != ''"> and s.name like concat('%', #{supplierName}, '%')</if>
            <if test="contact != null  and contact != ''"> and s.contact like concat('%', #{contact}, '%')</if>
        </where>
    </select>
    
    <select id="selectScmPurchaseArriveById" parameterType="Long" resultMap="ScmPurchaseArriveScmPurchaseArriveDetailResult">
        select a.id, a.arrive_no, a.contract_id, a.contract_no, a.supplier_id, a.arrive_date, a.status, a.remark, a.create_by, a.create_time,
            b.id, b.arrive_id, b.material_id, b.batch_no, b.price, b.book_quantity, b.arrive_quantity, b.return_quantity, b.detail_remark
        from scm_purchase_arrive a
        left join scm_purchase_arrive_detail b on b.arrive_id = a.id
        where a.id = #{id}
    </select>
        
    <insert id="insertScmPurchaseArrive" parameterType="ScmPurchaseArrive" useGeneratedKeys="true" keyProperty="id">
        insert into scm_purchase_arrive
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="arriveNo != null">arrive_no,</if>
            <if test="contractId != null">contract_id,</if>
            <if test="contractNo != null and contractNo != ''">contract_no,</if>
            <if test="supplierId != null">supplier_id,</if>
            <if test="arriveDate != null">arrive_date,</if>
            <if test="status != null">status,</if>
            <if test="remark != null">remark,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="arriveNo != null">#{arriveNo},</if>
            <if test="contractId != null">#{contractId},</if>
            <if test="contractNo != null and contractNo != ''">#{contractNo},</if>
            <if test="supplierId != null">#{supplierId},</if>
            <if test="arriveDate != null">#{arriveDate},</if>
            <if test="status != null">#{status},</if>
            <if test="remark != null">#{remark},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
         </trim>
    </insert>

    <update id="updateScmPurchaseArrive" parameterType="ScmPurchaseArrive">
        update scm_purchase_arrive
        <trim prefix="SET" suffixOverrides=",">
            <if test="arriveNo != null">arrive_no = #{arriveNo},</if>
            <if test="contractId != null">contract_id = #{contractId},</if>
            <if test="contractNo != null and contractNo != ''">contract_no = #{contractNo},</if>
            <if test="supplierId != null">supplier_id = #{supplierId},</if>
            <if test="arriveDate != null">arrive_date = #{arriveDate},</if>
            <if test="status != null">status = #{status},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteScmPurchaseArriveById" parameterType="Long">
        delete from scm_purchase_arrive where id = #{id}
    </delete>

    <delete id="deleteScmPurchaseArriveByIds" parameterType="String">
        delete from scm_purchase_arrive where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
    <delete id="deleteScmPurchaseArriveDetailByArriveIds" parameterType="String">
        delete from scm_purchase_arrive_detail where arrive_id in 
        <foreach item="arriveId" collection="array" open="(" separator="," close=")">
            #{arriveId}
        </foreach>
    </delete>

    <delete id="deleteScmPurchaseArriveDetailByArriveId" parameterType="Long">
        delete from scm_purchase_arrive_detail where arrive_id = #{arriveId}
    </delete>

    <insert id="batchScmPurchaseArriveDetail">
        insert into scm_purchase_arrive_detail(arrive_id, material_id, batch_no, price, book_quantity, arrive_quantity, return_quantity, detail_remark) values
        <foreach item="item" index="index" collection="list" separator=",">
            (#{item.arriveId}, #{item.materialId}, #{item.batchNo}, #{item.price}, #{item.bookQuantity}, #{item.arriveQuantity}, #{item.returnQuantity}, #{item.detailRemark})
        </foreach>
    </insert>
</mapper>