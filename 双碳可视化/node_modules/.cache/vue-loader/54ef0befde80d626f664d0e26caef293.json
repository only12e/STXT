{"remainingRequest":"C:\\Users\\LENOVO\\Desktop\\双碳数据可视化平台\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??ref--5!C:\\Users\\LENOVO\\Desktop\\双碳数据可视化平台\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\LENOVO\\Desktop\\双碳数据可视化平台\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\LENOVO\\Desktop\\双碳数据可视化平台\\node_modules\\@jiaminghi\\data-view\\lib\\components\\borderBox11\\src\\main.vue?vue&type=template&id=73f44228&","dependencies":[{"path":"C:\\Users\\LENOVO\\Desktop\\双碳数据可视化平台\\node_modules\\@jiaminghi\\data-view\\lib\\components\\borderBox11\\src\\main.vue","mtime":1684139010000},{"path":"C:\\Users\\LENOVO\\Desktop\\双碳数据可视化平台\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1684138976000},{"path":"C:\\Users\\LENOVO\\Desktop\\双碳数据可视化平台\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1684138964000},{"path":"C:\\Users\\LENOVO\\Desktop\\双碳数据可视化平台\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1684138976000},{"path":"C:\\Users\\LENOVO\\Desktop\\双碳数据可视化平台\\node_modules\\vue-loader\\lib\\index.js","mtime":1684139022000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}